[{"E:\\Mentor-Platform\\FrontEnd\\src\\index.js":"1","E:\\Mentor-Platform\\FrontEnd\\src\\reportWebVitals.js":"2","E:\\Mentor-Platform\\FrontEnd\\src\\App.js":"3","E:\\Mentor-Platform\\FrontEnd\\src\\hoc\\Layout\\Layout.js":"4","E:\\Mentor-Platform\\FrontEnd\\src\\components\\Mentor\\Login.js":"5","E:\\Mentor-Platform\\FrontEnd\\src\\components\\Mentee\\Login.js":"6","E:\\Mentor-Platform\\FrontEnd\\src\\components\\Find-My-Mentor\\FindMentor.js":"7","E:\\Mentor-Platform\\FrontEnd\\src\\components\\Home\\Home.js":"8","E:\\Mentor-Platform\\FrontEnd\\src\\components\\Mentor\\SignUp.js":"9","E:\\Mentor-Platform\\FrontEnd\\src\\components\\Mentee\\SignUp.js":"10","E:\\Mentor-Platform\\FrontEnd\\src\\components\\Find-My-Mentor\\DataScience.js":"11","E:\\Mentor-Platform\\FrontEnd\\src\\components\\Find-My-Mentor\\ProductManagement.js":"12","E:\\Mentor-Platform\\FrontEnd\\src\\components\\Find-My-Mentor\\All.js":"13","E:\\Mentor-Platform\\FrontEnd\\src\\hoc\\Auxillary\\Auxillary.js":"14","E:\\Mentor-Platform\\FrontEnd\\src\\components\\Find-My-Mentor\\UxDesign.js":"15","E:\\Mentor-Platform\\FrontEnd\\src\\components\\Find-My-Mentor\\SoftwareDevelopment.js":"16","E:\\Mentor-Platform\\FrontEnd\\src\\components\\Footer\\Footer.js":"17","E:\\Mentor-Platform\\FrontEnd\\src\\components\\Header\\Header.js":"18","E:\\Mentor-Platform\\FrontEnd\\src\\Test.js":"19","E:\\Mentor-Platform\\FrontEnd\\src\\components\\Find-My-Mentor\\CardDesign.js":"20","E:\\Mentor-Platform\\FrontEnd\\src\\components\\Mentor\\Profile.js":"21","E:\\Mentor-Platform\\FrontEnd\\src\\components\\Mentee\\Request.js":"22","E:\\Mentor-Platform\\FrontEnd\\src\\components\\Mentor\\Dashboard.js":"23"},{"size":885,"mtime":1610374087727,"results":"24","hashOfConfig":"25"},{"size":375,"mtime":1610374087727,"results":"26","hashOfConfig":"25"},{"size":1466,"mtime":1610943813158,"results":"27","hashOfConfig":"25"},{"size":424,"mtime":1610374087726,"results":"28","hashOfConfig":"25"},{"size":5827,"mtime":1610943870580,"results":"29","hashOfConfig":"25"},{"size":5809,"mtime":1610944329971,"results":"30","hashOfConfig":"25"},{"size":3173,"mtime":1610899298414,"results":"31","hashOfConfig":"25"},{"size":7628,"mtime":1610899086352,"results":"32","hashOfConfig":"25"},{"size":8351,"mtime":1610897564634,"results":"33","hashOfConfig":"25"},{"size":8996,"mtime":1610897574268,"results":"34","hashOfConfig":"25"},{"size":588,"mtime":1610899218705,"results":"35","hashOfConfig":"25"},{"size":587,"mtime":1610899217351,"results":"36","hashOfConfig":"25"},{"size":569,"mtime":1611139676104,"results":"37","hashOfConfig":"25"},{"size":56,"mtime":1610374087726,"results":"38","hashOfConfig":"25"},{"size":579,"mtime":1610899201963,"results":"39","hashOfConfig":"25"},{"size":582,"mtime":1610899215700,"results":"40","hashOfConfig":"25"},{"size":3181,"mtime":1610899402096,"results":"41","hashOfConfig":"25"},{"size":7133,"mtime":1611136183824,"results":"42","hashOfConfig":"25"},{"size":2471,"mtime":1610374087704,"results":"43","hashOfConfig":"25"},{"size":10435,"mtime":1611139677482,"results":"44","hashOfConfig":"25"},{"size":11413,"mtime":1611135860162,"results":"45","hashOfConfig":"25"},{"size":7236,"mtime":1611135931490,"results":"46","hashOfConfig":"25"},{"size":12650,"mtime":1610994355102,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"o4womm",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"50"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"50"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"50"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"50"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"E:\\Mentor-Platform\\FrontEnd\\src\\index.js",[],["99","100"],"E:\\Mentor-Platform\\FrontEnd\\src\\reportWebVitals.js",[],"E:\\Mentor-Platform\\FrontEnd\\src\\App.js",[],"E:\\Mentor-Platform\\FrontEnd\\src\\hoc\\Layout\\Layout.js",[],"E:\\Mentor-Platform\\FrontEnd\\src\\components\\Mentor\\Login.js",["101"],"import React, { useState, useEffect } from 'react';\r\nimport validator from 'validator';\r\nimport { FormControl, TextField, Button, Typography, Grid, Container } from '@material-ui/core';\r\nimport Students from '../../assets/images/students.png'\r\nconst Login = (props) => {\r\n    const menteeData = {\r\n        email: '',\r\n        password: '',\r\n        errorEmail: false,\r\n        errorPass: false,\r\n        email_error_text: null,\r\n        password_error_text: null,\r\n\r\n    };\r\n    const [formData, setFormData] = useState(menteeData);\r\n    const [validEmail, setValidEmail] = useState(false);\r\n    const [validPass, setValidPass] = useState(false);\r\n    const [btnDisabled, setBtnDisabled] = useState(true);\r\n    useEffect(() => {\r\n        HandleButton();\r\n    }, [validEmail, validPass]);\r\n\r\n    const HandleButton = () => {\r\n        if (validEmail && validPass)\r\n            setBtnDisabled(false);\r\n    }\r\n    const Login = () => {\r\n        props.history.push('/auth/mentor-dashboard');\r\n\r\n    }\r\n\r\n    const RedirectToMentor = () => {\r\n        props.history.push('/mentee-login');\r\n    }\r\n\r\n\r\n    const handleTextChange = (event) => {\r\n        setFormData({\r\n            ...formData,\r\n            [event.target.id]: event.target.value\r\n        });\r\n    };\r\n    const ValidatePass = () => {\r\n        if (formData.password === \"\" || !formData.password) {\r\n            setFormData({\r\n                ...formData,\r\n                password_error_text: null\r\n            });\r\n        } else {\r\n            if (formData.password.length >= 6) {\r\n                setValidPass(true);\r\n                setFormData({\r\n                    ...formData,\r\n                    password_error_text: null,\r\n                    errorPass: false\r\n                });\r\n            } else {\r\n                setFormData({\r\n                    ...formData,\r\n                    password_error_text: \"Your password must be at least 6 characters\",\r\n                    errorPass: true,\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    const ValidateEmail = () => {\r\n        console.log(formData.email);\r\n        if (formData.email === \"\") {\r\n            setFormData({\r\n                ...formData,\r\n                email_error_text: null\r\n            });\r\n        } else {\r\n            if (validator.isEmail(formData.email)) {\r\n                setValidEmail(true);\r\n                setFormData({\r\n                    ...formData,\r\n                    email_error_text: null,\r\n                    errorEmail: false\r\n                });\r\n            } else {\r\n                setFormData({\r\n                    ...formData,\r\n                    email_error_text: \"Sorry, this is not a valid email\",\r\n                    errorEmail: true\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n\r\n        <Container>\r\n            <Grid container spacing={4}>\r\n                <Grid item container sm={6} spacing={4} alignItems=\"center\" style={{ alignContent: \"center\" }}>\r\n                    <Grid item xs={12}>\r\n                        <Typography color=\"primary\" variant=\"h4\">Login as a Mentor</Typography>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} sm={9}>\r\n                        <FormControl fullWidth margin=\"normal\" variant=\"filled\">\r\n                            <TextField\r\n                                required\r\n                                id=\"email\"\r\n                                label=\"E-mail\"\r\n                                color=\"primary\"\r\n                                variant=\"filled\"\r\n                                helperText={formData.email_error_text}\r\n                                error={formData.errorEmail}\r\n                                value={formData.email}\r\n                                onChange={handleTextChange}\r\n                                onBlur={ValidateEmail}\r\n                            />\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={9}>\r\n                        <FormControl fullWidth margin=\"normal\" variant=\"filled\">\r\n                            <TextField\r\n                                required\r\n                                id=\"password\"\r\n                                label=\"Password\"\r\n                                color=\"primary\"\r\n                                variant=\"filled\"\r\n                                helperText={formData.password_error_text}\r\n                                error={formData.errorPass}\r\n                                value={formData.password}\r\n                                onChange={handleTextChange}\r\n                                onBlur={ValidatePass}\r\n                            />\r\n                        </FormControl>\r\n                    </Grid>\r\n\r\n                    <Grid item container justify=\"center\" sm={9} >\r\n                        <Grid item   >\r\n                            <Button variant=\"contained\" color=\"primary\" disabled={btnDisabled} onClick={Login}>Login</Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item container sm={6} spacing={2} justify='center' alignContent=\"center\" >\r\n\r\n                    <Grid item xs={12} sm={6}>\r\n                        <Typography color=\"primary\" variant=\"h5\">Are You a Mentee?</Typography>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} sm={9}>\r\n                        <img alt=\"complex\" src={Students} style={{ maxWidth: \"75%\" }} />\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} sm={6} >\r\n                        <Button variant=\"text\" color=\"primary\" onClick={RedirectToMentor}>Login here</Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </Container>\r\n    )\r\n}\r\nexport default Login;","E:\\Mentor-Platform\\FrontEnd\\src\\components\\Mentee\\Login.js",["102"],"import React, { useState, useEffect } from 'react';\r\nimport validator from 'validator';\r\nimport { FormControl, TextField, Button, Typography, Grid, Container } from '@material-ui/core';\r\nimport Students from '../../assets/images/students.png'\r\nconst Login = (props) => {\r\n    const menteeData = {\r\n        email: '',\r\n        password: '',\r\n        errorEmail: false,\r\n        errorPass: false,\r\n        email_error_text: null,\r\n        password_error_text: null,\r\n\r\n    };\r\n    const [formData, setFormData] = useState(menteeData);\r\n    const [validEmail, setValidEmail] = useState(false);\r\n    const [validPass, setValidPass] = useState(false);\r\n    const [btnDisabled, setBtnDisabled] = useState(true);\r\n    useEffect(() => {\r\n        HandleButton();\r\n    }, [validEmail, validPass]);\r\n\r\n    const HandleButton = () => {\r\n        if (validEmail && validPass)\r\n            setBtnDisabled(false);\r\n    }\r\n    const Login = () => {\r\n        console.log('logged-----');\r\n\r\n    }\r\n\r\n    const RedirectToMentor = () => {\r\n        props.history.push('/mentor-login');\r\n    }\r\n\r\n\r\n    const handleTextChange = (event) => {\r\n        setFormData({\r\n            ...formData,\r\n            [event.target.id]: event.target.value\r\n        });\r\n    };\r\n    const ValidatePass = () => {\r\n        if (formData.password === \"\" || !formData.password) {\r\n            setFormData({\r\n                ...formData,\r\n                password_error_text: null\r\n            });\r\n        } else {\r\n            if (formData.password.length >= 6) {\r\n                setValidPass(true);\r\n                setFormData({\r\n                    ...formData,\r\n                    password_error_text: null,\r\n                    errorPass: false\r\n                });\r\n            } else {\r\n                setFormData({\r\n                    ...formData,\r\n                    password_error_text: \"Your password must be at least 6 characters\",\r\n                    errorPass: true,\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    const ValidateEmail = () => {\r\n        console.log(formData.email);\r\n        if (formData.email === \"\") {\r\n            setFormData({\r\n                ...formData,\r\n                email_error_text: null\r\n            });\r\n        } else {\r\n            if (validator.isEmail(formData.email)) {\r\n                setValidEmail(true);\r\n                setFormData({\r\n                    ...formData,\r\n                    email_error_text: null,\r\n                    errorEmail: false\r\n                });\r\n            } else {\r\n                setFormData({\r\n                    ...formData,\r\n                    email_error_text: \"Sorry, this is not a valid email\",\r\n                    errorEmail: true\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n\r\n        <Container>\r\n            <Grid container spacing={4}>\r\n                <Grid item container sm={6} spacing={4} alignItems=\"center\" style={{ alignContent: \"center\" }}>\r\n                    <Grid item xs={12}>\r\n                        <Typography color=\"primary\" variant=\"h4\">Login as a Mentee</Typography>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} sm={9}>\r\n                        <FormControl fullWidth margin=\"normal\" variant=\"filled\">\r\n                            <TextField\r\n                                required\r\n                                id=\"email\"\r\n                                label=\"E-mail\"\r\n                                color=\"primary\"\r\n                                variant=\"filled\"\r\n                                helperText={formData.email_error_text}\r\n                                error={formData.errorEmail}\r\n                                value={formData.email}\r\n                                onChange={handleTextChange}\r\n                                onBlur={ValidateEmail}\r\n                            />\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={9}>\r\n                        <FormControl fullWidth margin=\"normal\" variant=\"filled\">\r\n                            <TextField\r\n                                required\r\n                                id=\"password\"\r\n                                label=\"Password\"\r\n                                color=\"primary\"\r\n                                variant=\"filled\"\r\n                                helperText={formData.password_error_text}\r\n                                error={formData.errorPass}\r\n                                value={formData.password}\r\n                                onChange={handleTextChange}\r\n                                onBlur={ValidatePass}\r\n                            />\r\n                        </FormControl>\r\n                    </Grid>\r\n\r\n                    <Grid item container justify=\"center\" sm={9} >\r\n                        <Grid item   >\r\n                            <Button variant=\"contained\" color=\"primary\" disabled={btnDisabled} onClick={Login}>Login</Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item container sm={6} spacing={2} justify='center' alignContent=\"center\" >\r\n\r\n                    <Grid item xs={12} sm={6}>\r\n                        <Typography color=\"primary\" variant=\"h5\">Are You a Mentor?</Typography>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} sm={9}>\r\n                        <img alt=\"complex\" src={Students} style={{ maxWidth: \"75%\" }} />\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} sm={6} >\r\n                        <Button variant=\"text\" color=\"primary\" onClick={RedirectToMentor}>Login here</Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </Container>\r\n    )\r\n}\r\nexport default Login;","E:\\Mentor-Platform\\FrontEnd\\src\\components\\Find-My-Mentor\\FindMentor.js",[],"E:\\Mentor-Platform\\FrontEnd\\src\\components\\Home\\Home.js",[],"E:\\Mentor-Platform\\FrontEnd\\src\\components\\Mentor\\SignUp.js",["103"],"import React, { useState, useEffect } from 'react';\r\nimport validator from 'validator';\r\nimport { FormControl, TextField, Button, Typography, Grid, Container } from '@material-ui/core';\r\nimport Mentor from '../../assets/images/men-sign.jpg'\r\nconst Signup = (props) => {\r\n    const menteeData = {\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        confirmPassword: '',\r\n        error: false,\r\n        errorEmail: false,\r\n        errorPass: false,\r\n        errorConfirmPass: false,\r\n        name_error_text: null,\r\n        email_error_text: null,\r\n        password_error_text: null,\r\n        confirm_password_error_text: null,\r\n\r\n\r\n    };\r\n    const [formData, setFormData] = useState(menteeData);\r\n    const [validEmail, setValidEmail] = useState(false);\r\n    const [validPass, setValidPass] = useState(false);\r\n    const [validConfirmPass, setValidConfirmPass] = useState(false);\r\n    const [btnDisabled, setBtnDisabled] = useState(true);\r\n\r\n    useEffect(() => {\r\n        HandleButton();\r\n    }, [validEmail, validPass,validConfirmPass]);\r\n\r\n    const HandleButton = () => {\r\n        if (validEmail && validPass && validConfirmPass)\r\n            setBtnDisabled(false);\r\n    }\r\n\r\n    const handleTextChange = (event) => {\r\n        setFormData({\r\n            ...formData,\r\n            [event.target.id]: event.target.value\r\n        });\r\n    };\r\n    const ValidateName = () => {\r\n        if (formData.name === \"\") {\r\n            setFormData({\r\n                ...formData,\r\n                error: true,\r\n                name_error_text: \"You must provide a name\"\r\n            });\r\n        }\r\n    }\r\n    const ValidatePass = () => {\r\n        if (formData.password === \"\" || !formData.password) {\r\n            setFormData({\r\n                ...formData,\r\n                password_error_text: null\r\n            });\r\n        } else {\r\n            if (formData.password.length >= 6) {\r\n                setValidPass(true);\r\n                setFormData({\r\n                    ...formData,\r\n                    password_error_text: null,\r\n                    errorPass: false\r\n                });\r\n            } else {\r\n                setFormData({\r\n                    ...formData,\r\n                    password_error_text: \"Your password must be at least 6 characters\",\r\n                    errorPass: true,\r\n                });\r\n            }\r\n        }\r\n    }\r\n    const RedirectToProfile = () => {\r\n        props.history.push('/mentor-profile');\r\n    }\r\n    const ValidateEmail = () => {\r\n        if (formData.email === \"\") {\r\n            setFormData({\r\n                ...formData,\r\n                email_error_text: null\r\n            });\r\n        } else {\r\n            if (validator.isEmail(formData.email)) {\r\n                setValidEmail(true);\r\n                setFormData({\r\n                    ...formData,\r\n                    email_error_text: null,\r\n                    errorEmail: false\r\n                });\r\n            } else {\r\n                setFormData({\r\n                    ...formData,\r\n                    email_error_text: \"Sorry, this is not a valid email\",\r\n                    errorEmail: true\r\n                });\r\n            }\r\n        }\r\n    }\r\n    const MatchPass = () => {\r\n        if (formData.password !== formData.confirmPassword) {\r\n            setFormData({\r\n                ...formData,\r\n                confirm_password_error_text: \"Sorry, Password donot match\",\r\n                errorConfirmPass: true\r\n            });\r\n        } else {\r\n            setValidConfirmPass(true);\r\n            setFormData({\r\n                ...formData,\r\n                confirm_password_error_text: null,\r\n                errorConfirmPass:false\r\n            });\r\n        }\r\n    }\r\n    return (\r\n        <Container>\r\n            <Grid container spacing={4}>\r\n                <Grid item container sm={6} spacing={2}>\r\n                    <Grid item xs={12}>\r\n                        <Typography color=\"primary\" variant=\"h4\">Sign up as a Mentor</Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={9}>\r\n                        <FormControl fullWidth margin=\"normal\" variant=\"filled\">\r\n                            <TextField\r\n                                required\r\n                                id=\"name\"\r\n                                label=\"Name\"\r\n                                color=\"primary\"\r\n                                variant=\"filled\"\r\n                                error={formData.error}\r\n                                value={formData.name}\r\n                                helperText={formData.name_error_text}\r\n                                onBlur={ValidateName}\r\n                                onChange={handleTextChange}\r\n                            />\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={9}>\r\n                        <FormControl fullWidth margin=\"normal\" variant=\"filled\">\r\n                            <TextField\r\n                                required\r\n                                id=\"email\"\r\n                                label=\"E-mail\"\r\n                                color=\"primary\"\r\n                                variant=\"filled\"\r\n                                helperText={formData.email_error_text}\r\n                                error={formData.errorEmail}\r\n                                value={formData.email}\r\n                                onChange={handleTextChange}\r\n                                onBlur={ValidateEmail}\r\n                            />\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={9}>\r\n                        <FormControl fullWidth margin=\"normal\" variant=\"filled\">\r\n                            <TextField\r\n                                required\r\n                                id=\"password\"\r\n                                label=\"Password\"\r\n                                color=\"primary\"\r\n                                variant=\"filled\"\r\n                                helperText={formData.password_error_text}\r\n                                error={formData.errorPass}\r\n                                value={formData.password}\r\n                                onChange={handleTextChange}\r\n                                onBlur={ValidatePass}\r\n                            />\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={9}>\r\n                        <FormControl fullWidth margin=\"normal\" variant=\"filled\">\r\n                            <TextField\r\n                                required\r\n                                id=\"confirmPassword\"\r\n                                label=\"Confirm Password\"\r\n                                color=\"primary\"\r\n                                variant=\"filled\"\r\n                                helperText={formData.confirm_password_error_text}\r\n                                error={formData.errorConfirmPass}\r\n                                value={formData.confirmPassword}\r\n                                onChange={handleTextChange}\r\n                                onBlur={MatchPass}\r\n\r\n\r\n                            />\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item container justify=\"center\" sm={9} >\r\n                        <Grid item   >\r\n                            <Button variant=\"contained\" color=\"primary\" disabled={btnDisabled} onClick={RedirectToProfile}>Sign Up</Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item container sm={6} spacing={2} justify='center' alignContent=\"center\" >\r\n\r\n                    <Grid item xs={12} sm={6}>\r\n                        <Typography color=\"primary\" variant=\"h5\">Are You a Mentee?</Typography>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} sm={9}>\r\n                        <img alt=\"complex\" src={Mentor} style={{ maxWidth: \"75%\" }} />\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} sm={6} >\r\n                        <Button variant=\"text\" color=\"primary\" >Sign Up here</Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </Container>\r\n    )\r\n}\r\nexport default Signup;","E:\\Mentor-Platform\\FrontEnd\\src\\components\\Mentee\\SignUp.js",["104","105","106","107","108","109","110","111","112","113"],"import React, { useState, useEffect } from 'react';\r\nimport validator from 'validator';\r\nimport { FormControl, TextField, Button, Typography, Grid, Container, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\r\nimport Mentor from '../../assets/images/men-sign.jpg'\r\nimport CheckCircleSharpIcon from '@material-ui/icons/CheckCircleSharp';\r\nconst Signup = (props) => {\r\n    const menteeData = {\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        linkedInUrl: '',\r\n        error: false,\r\n        errorEmail: false,\r\n        errorPass: false,\r\n        name_error_text: null,\r\n        email_error_text: null,\r\n        password_error_text: null,\r\n\r\n    };\r\n    const [formData, setFormData] = useState(menteeData);\r\n    const [validEmail, setValidEmail] = useState(false);\r\n    const [validPass, setValidPass] = useState(false);\r\n    const [btnDisabled, setBtnDisabled] = useState(true);\r\n    const [open, setOpen] = useState(false);\r\n    useEffect(() => {\r\n        HandleButton();\r\n    }, [validEmail, validPass]);\r\n\r\n    const HandleButton = () => {\r\n        if (validEmail && validPass)\r\n            setBtnDisabled(false);\r\n    }\r\n    const RegisterButton = () => {\r\n        props.history.push('/');\r\n    }\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n    const handleClose = (value) => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const RedirectToMentor = () => {\r\n        props.history.push('/mentor-register');\r\n    }\r\n\r\n\r\n    const handleTextChange = (event) => {\r\n        setFormData({\r\n            ...formData,\r\n            [event.target.id]: event.target.value\r\n        });\r\n    };\r\n    const ValidateName = () => {\r\n        if (formData.name === \"\") {\r\n            setFormData({\r\n                ...formData,\r\n                error: true,\r\n                name_error_text: \"You must provide a name\"\r\n            });\r\n        }\r\n    }\r\n    const ValidatePass = () => {\r\n        if (formData.password === \"\" || !formData.password) {\r\n            setFormData({\r\n                ...formData,\r\n                password_error_text: null\r\n            });\r\n        } else {\r\n            if (formData.password.length >= 6) {\r\n                setValidPass(true);\r\n                setFormData({\r\n                    ...formData,\r\n                    password_error_text: null,\r\n                    errorPass: false\r\n                });\r\n            } else {\r\n                setFormData({\r\n                    ...formData,\r\n                    password_error_text: \"Your password must be at least 6 characters\",\r\n                    errorPass: true,\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    const ValidateEmail = () => {\r\n        console.log(formData.email);\r\n        if (formData.email === \"\") {\r\n            setFormData({\r\n                ...formData,\r\n                email_error_text: null\r\n            });\r\n        } else {\r\n            if (validator.isEmail(formData.email)) {\r\n                setValidEmail(true);\r\n                setFormData({\r\n                    ...formData,\r\n                    email_error_text: null,\r\n                    errorEmail: false\r\n                });\r\n            } else {\r\n                setFormData({\r\n                    ...formData,\r\n                    email_error_text: \"Sorry, this is not a valid email\",\r\n                    errorEmail: true\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n\r\n        <Container>\r\n            <Grid container spacing={4}>\r\n                <Grid item container sm={6} spacing={2}>\r\n                    <Grid item xs={12}>\r\n                        <Typography color=\"primary\" variant=\"h4\">Sign up as a Mentee</Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={9}>\r\n                        <FormControl fullWidth margin=\"normal\" variant=\"filled\">\r\n                            <TextField\r\n                                required\r\n                                id=\"name\"\r\n                                label=\"Name\"\r\n                                color=\"primary\"\r\n                                variant=\"filled\"\r\n                                error={formData.error}\r\n                                value={formData.name}\r\n                                helperText={formData.name_error_text}\r\n                                onBlur={ValidateName}\r\n                                onChange={handleTextChange}\r\n                            />\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={9}>\r\n                        <FormControl fullWidth margin=\"normal\" variant=\"filled\">\r\n                            <TextField\r\n                                required\r\n                                id=\"email\"\r\n                                label=\"E-mail\"\r\n                                color=\"primary\"\r\n                                variant=\"filled\"\r\n                                helperText={formData.email_error_text}\r\n                                error={formData.errorEmail}\r\n                                value={formData.email}\r\n                                onChange={handleTextChange}\r\n                                onBlur={ValidateEmail}\r\n                            />\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={9}>\r\n                        <FormControl fullWidth margin=\"normal\" variant=\"filled\">\r\n                            <TextField\r\n                                required\r\n                                id=\"password\"\r\n                                label=\"Password\"\r\n                                color=\"primary\"\r\n                                variant=\"filled\"\r\n                                helperText={formData.password_error_text}\r\n                                error={formData.errorPass}\r\n                                value={formData.password}\r\n                                onChange={handleTextChange}\r\n                                onBlur={ValidatePass}\r\n                            />\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={9}>\r\n                        <FormControl fullWidth margin=\"normal\" variant=\"filled\">\r\n                            <TextField\r\n\r\n                                id=\"linkedInUrl\"\r\n                                label=\"LinkedIn Url\"\r\n                                color=\"primary\"\r\n                                variant=\"filled\"\r\n                                value={formData.linkedInUrl}\r\n                                onChange={handleTextChange}\r\n                            />\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item container justify=\"center\" sm={9} >\r\n                        <Grid item   >\r\n                            <Button variant=\"contained\" color=\"primary\" disabled={btnDisabled} onClick={RegisterButton}>Sign Up</Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item container sm={6} spacing={2} justify='center' alignContent=\"center\" >\r\n\r\n                    <Grid item xs={12} sm={6}>\r\n                        <Typography color=\"primary\" variant=\"h5\">Are You a Mentor?</Typography>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} sm={9}>\r\n                        <img alt=\"complex\" src={Mentor} style={{ maxWidth: \"75%\" }} />\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} sm={6} >\r\n                        <Button variant=\"text\" color=\"primary\" onClick={RedirectToMentor}>Sign Up here</Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </Container>\r\n\r\n        /* <Dialog\r\n            open={open}\r\n            onClose={handleClose}>\r\n            <DialogTitle disableTypography style={{backgroundColor: 'beige'}}>\r\n               <div style={{display:'flex'}}>\r\n               < CheckCircleSharpIcon color=\"primary\"style={{width:'2em', height:'3em',paddingRight:'10px'}} />\r\n               <h2>Successfully Registered with My Mentor</h2>\r\n               </div>\r\n            </DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText >\r\n                 <div style={{display:'flex',justifyContent:'center'}}>\r\n                 <h2>Please Login To Continue</h2> \r\n                 </div>\r\n      </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions  style={{display:'flex',justifyContent:'space-around'}}>\r\n                <Button onClick={()=>handleClose('close')} color=\"primary\" variant='outlined'>\r\n                   Close\r\n      </Button>\r\n                <Button onClick={()=>handleClose('login')} color=\"primary\" variant='contained' autoFocus>\r\n                   Login\r\n      </Button>\r\n            </DialogActions>\r\n        </Dialog> */\r\n\r\n\r\n\r\n    )\r\n}\r\nexport default Signup;","E:\\Mentor-Platform\\FrontEnd\\src\\components\\Find-My-Mentor\\DataScience.js",[],"E:\\Mentor-Platform\\FrontEnd\\src\\components\\Find-My-Mentor\\ProductManagement.js",[],"E:\\Mentor-Platform\\FrontEnd\\src\\components\\Find-My-Mentor\\All.js",[],"E:\\Mentor-Platform\\FrontEnd\\src\\hoc\\Auxillary\\Auxillary.js",[],"E:\\Mentor-Platform\\FrontEnd\\src\\components\\Find-My-Mentor\\UxDesign.js",[],"E:\\Mentor-Platform\\FrontEnd\\src\\components\\Find-My-Mentor\\SoftwareDevelopment.js",[],"E:\\Mentor-Platform\\FrontEnd\\src\\components\\Footer\\Footer.js",[],"E:\\Mentor-Platform\\FrontEnd\\src\\components\\Header\\Header.js",[],"E:\\Mentor-Platform\\FrontEnd\\src\\Test.js",[],"E:\\Mentor-Platform\\FrontEnd\\src\\components\\Find-My-Mentor\\CardDesign.js",["114"],"E:\\Mentor-Platform\\FrontEnd\\src\\components\\Mentor\\Profile.js",[],"E:\\Mentor-Platform\\FrontEnd\\src\\components\\Mentee\\Request.js",[],"E:\\Mentor-Platform\\FrontEnd\\src\\components\\Mentor\\Dashboard.js",[],{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","severity":1,"message":"120","line":21,"column":8,"nodeType":"121","endLine":21,"endColumn":31,"suggestions":"122"},{"ruleId":"119","severity":1,"message":"120","line":21,"column":8,"nodeType":"121","endLine":21,"endColumn":31,"suggestions":"123"},{"ruleId":"119","severity":1,"message":"120","line":30,"column":8,"nodeType":"121","endLine":30,"endColumn":48,"suggestions":"124"},{"ruleId":"125","severity":1,"message":"126","line":3,"column":71,"nodeType":"127","messageId":"128","endLine":3,"endColumn":77},{"ruleId":"125","severity":1,"message":"129","line":3,"column":79,"nodeType":"127","messageId":"128","endLine":3,"endColumn":92},{"ruleId":"125","severity":1,"message":"130","line":3,"column":94,"nodeType":"127","messageId":"128","endLine":3,"endColumn":107},{"ruleId":"125","severity":1,"message":"131","line":3,"column":109,"nodeType":"127","messageId":"128","endLine":3,"endColumn":126},{"ruleId":"125","severity":1,"message":"132","line":3,"column":128,"nodeType":"127","messageId":"128","endLine":3,"endColumn":139},{"ruleId":"125","severity":1,"message":"133","line":5,"column":8,"nodeType":"127","messageId":"128","endLine":5,"endColumn":28},{"ruleId":"125","severity":1,"message":"134","line":24,"column":12,"nodeType":"127","messageId":"128","endLine":24,"endColumn":16},{"ruleId":"119","severity":1,"message":"120","line":27,"column":8,"nodeType":"121","endLine":27,"endColumn":31,"suggestions":"135"},{"ruleId":"125","severity":1,"message":"136","line":36,"column":11,"nodeType":"127","messageId":"128","endLine":36,"endColumn":26},{"ruleId":"125","severity":1,"message":"137","line":39,"column":11,"nodeType":"127","messageId":"128","endLine":39,"endColumn":22},{"ruleId":"125","severity":1,"message":"138","line":47,"column":13,"nodeType":"127","messageId":"128","endLine":47,"endColumn":20},"no-native-reassign",["139"],"no-negated-in-lhs",["140"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'HandleButton'. Either include it or remove the dependency array.","ArrayExpression",["141"],["142"],["143"],"no-unused-vars","'Dialog' is defined but never used.","Identifier","unusedVar","'DialogActions' is defined but never used.","'DialogContent' is defined but never used.","'DialogContentText' is defined but never used.","'DialogTitle' is defined but never used.","'CheckCircleSharpIcon' is defined but never used.","'open' is assigned a value but never used.",["144"],"'handleClickOpen' is assigned a value but never used.","'handleClose' is assigned a value but never used.","'history' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"145","fix":"146"},{"desc":"145","fix":"147"},{"desc":"148","fix":"149"},{"desc":"145","fix":"150"},"Update the dependencies array to be: [HandleButton, validEmail, validPass]",{"range":"151","text":"152"},{"range":"153","text":"152"},"Update the dependencies array to be: [validEmail, validPass, validConfirmPass, HandleButton]",{"range":"154","text":"155"},{"range":"156","text":"152"},[762,785],"[HandleButton, validEmail, validPass]",[762,785],[1017,1057],"[validEmail, validPass, validConfirmPass, HandleButton]",[1050,1073]]